# Configure Quarkus to listen on 0.0.0.0
quarkus.http.host=0.0.0.0
# Allow external access to Quarkus Dev UI
#quarkus.dev-ui.hosts=
quarkus.dev-ui.cors.enabled=false
%dev.quarkus.http.cors=false

# Disable dev services for PostgreSQL and use a custom image
quarkus.datasource.devservices.enabled=false
# quarkus.devservices.timeout=120
# quarkus.datasource.db-kind=postgresql
# quarkus.datasource.devservices.image-name=registry.redhat.io/rhel8/postgresql-12:latest
# quarkus.datasource.devservices.port=15432

# # Set custom environment variables for the PostgreSQL container
# quarkus.datasource.devservices.container-env.POSTGRESQL_USER=user
# quarkus.datasource.devservices.container-env.POSTGRESQL_PASSWORD=pass
# quarkus.datasource.devservices.container-env.POSTGRESQL_ROOT_PASSWORD=root
# quarkus.datasource.devservices.container-env.POSTGRESQL_DATABASE=db
# quarkus.datasource.devservices.command=/usr/bin/run-postgresql

# Datasource configuration for testing
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=sa

# Datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=user
quarkus.datasource.password=pass
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/db

# Datasource configuration for prod
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/db


%mysql.quarkus.datasource.db-kind=mysql
%mysql.quarkus.datasource.username=user
%mysql.quarkus.datasource.password=pass
%mysql.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/db

%mongodb.quarkus.profile=mongodb
%mongodb.quarkus.mongodb.connection-string=mongodb://user:pass@localhost:27017
%mongodb.quarkus.mongodb.database=db
quarkus.mongodb.devservices.enabled=false
# Hibernate configuration
quarkus.hibernate-orm.database.generation=update

# Optional: Maximum pool size for connections
quarkus.datasource.jdbc.max-size=20

# Optional: Configurations for handling transactions and SQL queries logging
quarkus.datasource.jdbc.transactions=enabled
quarkus.hibernate-orm.sql-load-script=no-file
quarkus.hibernate-orm.log.sql=true

#quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000
#quarkus.container-image.group=quickstart
#quarkus.container-image.name=java
#quarkus.container-image.build=true

# Make sure credentials are ~/.docker/config.json
#quarkus.container-image.builder=jib
#quarkus.container-image.push=true
